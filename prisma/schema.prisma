// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma migrate dev --name the_name
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Testing {
  id   String @id @default(uuid())
  test String
}

enum roles {
  customer
  manager
  admin
}

model Users {
  id                                 String     @id @default(uuid())
  first_name                         String     @db.VarChar(60)
  last_name                          String     @db.VarChar(120)
  email                              String     @unique
  password                           String     @db.Char(60) // hashed and salted password
  created_at                         DateTime   @default(now())
  role                               roles      @default(customer)
  failed_login_attempts              Int        @default(0)
  failed_login_attempts_timestamps   DateTime[] @default([])
  session_token                      String? // hash and salt accepted other tokens due to hash collision, just using string because of time constraints. If hackers get the DB then by that point just wipe it.
  login_at                           DateTime?  @db.Timestamp()
  logout_at                          DateTime?  @db.Timestamp()
  password_reset_requests            Int        @default(0)
  password_reset_requests_timestamps DateTime[] @default([])
  password_reset_token               String?
  password_last_updated              DateTime   @default(now())
}

model Products {
  id              String    @id @default(uuid())
  is_published    Boolean   @default(false)
  is_deleted      Boolean   @default(false)
  name            String
  description     String
  variations      String[]  @db.Uuid
  created_by      String    @db.Uuid
  created_at      DateTime  @default(now())
  last_updated_by String?   @db.Uuid
  last_updated_at DateTime? @db.Timestamp()
}

model ProductVariations {
  id           String   @id @default(uuid())
  title        String
  price        Decimal  @db.Money
  stock        Int      @db.Integer
  images       String[] @db.Uuid
  is_published Boolean  @db.Boolean
  is_deleted   Boolean  @db.Boolean
}
