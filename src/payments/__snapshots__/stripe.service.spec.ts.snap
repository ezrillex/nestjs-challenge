// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stripe Service debug method, update payment intent passes a query to update to prisma: sends the update payment method to stripe in query 1`] = `
[
  [
    "test_id",
    {
      "payment_method": "new payment method",
    },
  ],
]
`;

exports[`Stripe Service debug method, update payment intent throws if cant find the payment intent: intent not found error 1`] = `"Payment intent specified not found."`;

exports[`Stripe Service debug method, update payment intent throws if status is already completed: intent already completed error 1`] = `"Payment has already succeeded, no further changes are allowed."`;

exports[`Stripe Service get order payments if valid queries for a list with all the payment intents associated: query of payments with select fields 1`] = `
[
  [
    {
      "select": {
        "created_at": true,
        "id": true,
        "order_id": true,
        "status": true,
        "stripe_event_id": true,
      },
      "where": {
        "order_id": "076b5b00-c719-40c3-a8f2-d1a11c17b75c",
      },
    },
  ],
]
`;

exports[`Stripe Service get order payments throws if cant find order with user: order user combo not found 1`] = `"Order specified not found. Or order does not belong to the logged in user!"`;

exports[`Stripe Service webhook should error if empty body: missing body in request error 1`] = `"Missing Body"`;

exports[`Stripe Service webhook should form an update request to prisma with failed and return received true for stripe: update status payment_failed order 1`] = `
[
  [
    {
      "data": {
        "IncomingPaymentWebhooks": {
          "create": {
            "data": "{"signature":"some-value","body":{"random":"value"}}",
            "processed_at": "2021-01-01T16:10:59.000Z",
          },
        },
        "PaymentIntents": {
          "update": {
            "data": {
              "status": undefined,
            },
            "where": {
              "id": "test_payment_id",
            },
          },
        },
        "paymentStatus": undefined,
      },
      "where": {
        "id": "test_id",
      },
    },
  ],
]
`;

exports[`Stripe Service webhook should form an update request to prisma with success and return received true for stripe: update status ok order 1`] = `
[
  [
    {
      "data": {
        "IncomingPaymentWebhooks": {
          "create": {
            "data": "{"signature":"some-value","body":{"random":"value"}}",
            "processed_at": "2021-01-01T16:10:59.000Z",
          },
        },
        "PaymentIntents": {
          "update": {
            "data": {
              "status": "succeeded",
            },
            "where": {
              "id": "test_payment_id",
            },
          },
        },
        "paymentStatus": "succeeded",
      },
      "where": {
        "id": "test_id",
      },
    },
  ],
]
`;

exports[`Stripe Service webhook should get data from stripe and try to form a request to prisma and throws if prisma returns nothing: prisma find payment query 1`] = `
[
  [
    {
      "where": {
        "PaymentIntents": {
          "some": {
            "id": "test_payment_id",
          },
        },
        "id": "test_id",
      },
    },
  ],
]
`;

exports[`Stripe Service webhook should throw if no headers for signature: missing signature in header error 1`] = `"Missing Stripe Signature"`;
