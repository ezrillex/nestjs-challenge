# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Categories {
  id: String!
  name: String!
}

type GetCategoriesResponse {
  id: String!
  name: String!
  products: [Products!]!
}

type Images {
  id: String!
  url: String!
  created_at: DateTime!
  product_variation_id: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductVariations {
  id: String!
  title: String!
  price: Float!
  stock: Int!
  images: [Images!]
}

type Products {
  id: ID!
  is_published: Boolean!
  is_deleted: Boolean!
  name: String!
  description: String!
  variations: [ProductVariations!]!
  categories: [Categories!]!
  created_by: String!
  created_at: DateTime!
  last_updated_by: String
  last_updated_at: DateTime
}

type LikesOfProducts {
  user_id: ID!
  product_variation_id: ID!
  state: Boolean!
}

type Users {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  role: String!
  created_at: DateTime!
  login_at: DateTime!
  password_last_updated: DateTime!
  likes_products: [LikesOfProducts!]!
}

type CartItems {
  id: ID!
  cart_owner: Users!
  product_variation: ProductVariations!
  quantity: Int!
}

type OrderItems {
  id: ID!
  product_variation: ProductVariations
  quantity: Int!
  price_purchased_at: Float!
}

type PaymentIntents {
  id: ID!
  status: String
  created_at: DateTime!
  stripe_event_id: ID!
}

type Orders {
  id: ID!
  user: Users!
  payments: [PaymentIntents!]!
  paymentStatus: String!
  orderStatus: String!
  order_items: [OrderItems!]!
}

type Query {
  user(id: ID!): Users!
  getLikes: [ProductVariations!]
  getProducts(GetProductsInput: GetProductsInput!): [Products!]
  getProductById(id: String!): Products
  getCategories: [GetCategoriesResponse!]
  getCartItems: [CartItems!]
  getOrders(GetOrdersInput: GetOrdersInput!): [Orders!]
  getOrder(order_id: String!): Orders
}

input GetProductsInput {
  first: Int
  offset: Int
  categoryFilter: [ID!]
  search: String
  likedOnly: Boolean
  omitImages: Boolean
  sort: String
}

input GetOrdersInput {
  first: Int
  offset: Int
  client_id: ID
}

type Mutation {
  toggleLike(product_variation_id: String!): LikesOfProducts
  createProduct(CreateProductInput: CreateProductInput!): Products
  updateProduct(UpdateProductInput: UpdateProductInput!): Products
  deleteProduct(product_id: String!): String
  updateProductVariation(UpdateProductVariationInput: UpdateProductVariationInput!): ProductVariations
  createProductVariation(CreateProductVariationInput: CreateProductVariationInput!): ProductVariations
  deleteProductVariation(variation_id: String!): String
  createCategory(name: String!): Categories
  deleteCategory(id: ID!): String
  addToCart(variation_id: ID!, quantity: Int!): CartItems
  removeFromCart(product_variation_id: String!): String
  createOrder: Orders
}

input CreateProductInput {
  name: String!
  description: String!
  categories: [ID!]
  variations: [CreateVariationInput!]!
}

input CreateVariationInput {
  title: String!
  price: Float!
  stock: Float!
}

input UpdateProductInput {
  id: ID!
  name: String
  description: String
  categories: [ID!]
  is_published: Boolean
}

input UpdateProductVariationInput {
  id: ID!
  title: String
  price: Float
  stock: Int
}

input CreateProductVariationInput {
  product_id: ID!
  title: String!
  price: Float!
  stock: Int!
}