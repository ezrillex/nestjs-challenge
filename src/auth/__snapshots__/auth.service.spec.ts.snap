// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthService changePassword throws an error when the password and repeat password do not match: mismatch password response 1`] = `"Passwords do not match"`;

exports[`AuthService changePassword throws an error when the token is invalid: token is invalid 1`] = `"An error occurred when validating reset token: invalid signature"`;

exports[`AuthService changePassword throws an error when the token is malformed: token is malformed 1`] = `"An error occurred when validating reset token: jwt malformed"`;

exports[`AuthService changePassword throws an error when the token payload does not match the user's current token (e.g., token reused or invalidated): token mismatch, invalidated 1`] = `"The token is not valid."`;

exports[`AuthService checkIfAttemptsInLast24h throws an error when more than two timestamps fall within a 24-hour period: too many in 24 h 1`] = `"Too many attempts in 24 hour period."`;

exports[`AuthService forgotPasswordRequest updates the database to append a new timestamp and retain only the latest three timestamps: expected database update 1`] = `
{
  "data": {
    "password_reset_requests": 3,
    "password_reset_requests_timestamps": [
      1999-03-20T07:50:20.000Z,
      1999-03-20T07:50:20.000Z,
      2021-01-30T07:45:50.000Z,
    ],
    "password_reset_token": "made up token",
  },
  "where": {
    "id": "some id",
  },
}
`;

exports[`AuthService login returns a token and role when credentials are valid: ok response 1`] = `
{
  "created_at": undefined,
  "email": undefined,
  "first_name": undefined,
  "id": "test id",
  "last_name": undefined,
  "login_at": undefined,
  "password_last_updated": undefined,
  "role": "customer",
  "token": "my_token",
}
`;

exports[`AuthService login throws an error when the email does not exist in the database: email not found response 1`] = `"Couldn't find your account. Make sure this is the right email."`;

exports[`AuthService login throws an error when the password is incorrect: wrong password response 1`] = `"Wrong password. Try again or use the forgot password api to reset it."`;

exports[`AuthService loginUser returns a token and role when credentials are valid: ok response 1`] = `
{
  "created_at": undefined,
  "email": undefined,
  "first_name": undefined,
  "id": "test id",
  "last_name": undefined,
  "login_at": undefined,
  "password_last_updated": undefined,
  "role": "customer",
  "token": "my_token",
}
`;

exports[`AuthService loginUser throws an error when the email does not exist in the database: email not found response 1`] = `"Couldn't find your account. Make sure this is the right email."`;

exports[`AuthService loginUser throws an error when the password is incorrect: wrong password response 1`] = `"Wrong password. Try again or use the forgot password api to reset it."`;

exports[`AuthService logout updates the database with a valid logout request for the user: the expected database update 1`] = `
{
  "data": {
    "logout_at": "2021-01-30T07:45:50.000Z",
    "session_token": null,
  },
  "where": {
    "id": "some id",
  },
}
`;

exports[`AuthService logoutUser updates the database with a valid logout request for the user: the expected database update 1`] = `
{
  "data": {
    "logout_at": "2021-01-30T07:45:50.000Z",
    "session_token": null,
  },
  "where": {
    "id": "some id",
  },
}
`;

exports[`AuthService registerUser throws an error when email is already registered: email is already in use 1`] = `"Email is already in use"`;

exports[`AuthService registerUser throws an error when password and repeat_password do not match: password mismatch 1`] = `"Passwords do not match"`;

exports[`AuthService resetPassword updates the database with the new password: the expected database update 1`] = `
{
  "data": {
    "failed_login_attempts": 0,
    "failed_login_attempts_timestamps": [],
    "password": Any<String>,
    "password_last_updated": 2021-01-30T07:45:50.000Z,
    "password_reset_requests": 0,
    "password_reset_requests_timestamps": [],
    "password_reset_token": null,
  },
  "where": {
    "id": "some id",
  },
}
`;
